<div class="container-fluid px-0">
  <div class="row mb-3">
    <div class="col">
      <h1 class="h3 mb-2">Database Overview</h1>
      <p class="database-connection-info">
        Connected to database: <span class="badge rounded-pill database-name-badge"><%= get_database_name %></span>
      </p>
    </div>
  </div>

  <div class="row g-3 mb-4" id="analytics-cards">
    <div class="col-md-4">
      <div class="card h-100 border-0 shadow-sm <%= stat_card_bg_class %>">
        <div class="card-body d-flex align-items-center">
          <div class="metric-icon me-3">
            <i class="bi bi-table fs-4"></i>
          </div>
          <div class="text-start">
            <h5 class="mb-1">Tables</h5>
            <h2 class="mb-0">
              <span class="skeleton-loader number-loader" id="tables-loading">
                &nbsp;&nbsp;
              </span>
              <span id="tables-count" class="d-none">0</span>
            </h2>
          </div>
        </div>
      </div>
    </div>
    
    <div class="col-md-4">
      <div class="card h-100 border-0 shadow-sm <%= stat_card_bg_class %>">
        <div class="card-body d-flex align-items-center">
          <div class="metric-icon me-3">
            <i class="bi bi-database fs-4"></i>
          </div>
          <div class="text-start">
            <h5 class="mb-1">Records</h5>
            <h2 class="mb-0">
              <span class="skeleton-loader number-loader" id="records-loading">
                &nbsp;&nbsp;&nbsp;&nbsp;
              </span>
              <span id="records-count" class="d-none">0</span>
            </h2>
          </div>
        </div>
      </div>
    </div>
    
    <div class="col-md-4">
      <div class="card h-100 border-0 shadow-sm <%= stat_card_bg_class %>">
        <div class="card-body d-flex align-items-center">
          <div class="metric-icon me-3">
            <i class="bi bi-hdd fs-4"></i>
          </div>
          <div class="text-start">
            <h5 class="mb-1">Database Size</h5>
            <h2 class="mb-0">
              <span class="skeleton-loader number-loader" id="size-loading">
                &nbsp;&nbsp;&nbsp;
              </span>
              <span id="size-count" class="d-none">0</span>
            </h2>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <div class="row g-3">
    <div class="col-md-6 mb-4">
      <div class="card h-100 shadow-sm">
        <div class="card-header">
          <h5 class="card-title mb-0">Largest Tables</h5>
        </div>
        <div class="card-body p-0" id="largest-tables-container">
          <div class="table-responsive">
            <table class="table table-hover table-sm mb-0">
              <thead>
                <tr>
                  <th>Table Name</th>
                  <th class="text-end">Records</th>
                </tr>
              </thead>
              <tbody>
                <% 10.times do %>
                  <tr>
                    <td><div class="skeleton-loader table-cell-loader"></div></td>
                    <td class="text-end"><div class="skeleton-loader records-loader"></div></td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>

    <div class="col-md-6 mb-4">
      <div class="card shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h5 class="card-title mb-0">Recent SQL Queries</h5>
          <div id="queries-view-all-link" class="d-none">
            <!-- Link will be added dynamically if query logging is enabled -->
          </div>
        </div>
        <div class="card-body p-0" id="recent-queries-container">
          <div class="table-responsive">
            <table class="table table-hover table-sm mb-0">
              <thead>
                <tr>
                  <th>Query</th>
                  <th class="text-end" style="width: 120px">Duration</th>
                  <th class="text-end" style="width: 180px">Time</th>
                </tr>
              </thead>
              <tbody>
                <% 5.times do %>
                  <tr>
                    <td><div class="skeleton-loader query-cell-loader"></div></td>
                    <td class="text-end"><div class="skeleton-loader duration-cell-loader"></div></td>
                    <td class="text-end"><div class="skeleton-loader time-cell-loader"></div></td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Helper function to format numbers with commas
  function numberWithDelimiter(number) {
    return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
  }

  // Helper function to format file sizes
  function numberToHumanSize(bytes) {
    if (bytes === null || bytes === undefined) return 'N/A';
    if (bytes === 0) return '0 Bytes';
    
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  }

  // Function to update analytics cards
  function updateTablesCount(data) {
    document.getElementById('tables-loading').classList.add('d-none');
    document.getElementById('tables-count').classList.remove('d-none');
    document.getElementById('tables-count').textContent = data.total_tables || 0;
  }
  
  function updateRelationshipsCount(data) {
    document.getElementById('relationships-loading').classList.add('d-none');
    document.getElementById('relationships-count').classList.remove('d-none');
    document.getElementById('relationships-count').textContent = data.total_relationships || 0;
  }
  
  function updateDatabaseSize(data) {
    document.getElementById('size-loading').classList.add('d-none');
    document.getElementById('size-count').classList.remove('d-none');
    document.getElementById('size-count').textContent = numberToHumanSize(data.schema_size);
  }
  
  function updateRecordsData(recordsData) {
    // Update records count
    document.getElementById('records-loading').classList.add('d-none');
    document.getElementById('records-count').classList.remove('d-none');
    document.getElementById('records-count').textContent = numberWithDelimiter(recordsData.total_records || 0);
    
    // Update largest tables
    updateLargestTables(recordsData);
  }

  // Function to update largest tables
  function updateLargestTables(data) {
    const container = document.getElementById('largest-tables-container');
    
    if (data.largest_tables && data.largest_tables.length > 0) {
      const tableHtml = `
        <div class="table-responsive">
          <table class="table table-sm table-hover">
            <thead>
              <tr>
                <th>Table Name</th>
                <th class="text-end">Records</th>
              </tr>
            </thead>
            <tbody>
              ${data.largest_tables.map(table => `
                <tr>
                  <td>
                    <a href="${window.location.origin}${window.location.pathname.replace(/\/$/, '')}/tables/${table.name}">
                      ${table.name}
                    </a>
                  </td>
                  <td class="text-end">${numberWithDelimiter(table.record_count)}</td>
                </tr>
              `).join('')}
            </tbody>
          </table>
        </div>
      `;
      container.innerHTML = tableHtml;
    } else {
      container.innerHTML = `
        <div class="text-center my-4 empty-data-message">
          <p>No table data available</p>
        </div>
      `;
    }
  }

  // Function to update recent queries
  function updateRecentQueries(data) {
    const container = document.getElementById('recent-queries-container');
    const linkContainer = document.getElementById('queries-view-all-link');
    
    if (data.enabled) {
      // Show "View All Logs" link if query logging is enabled
      linkContainer.innerHTML = `
        <a href="${window.location.origin}${window.location.pathname.replace(/\/$/, '')}/logs" class="btn btn-sm btn-primary">View All Logs</a>
      `;
      linkContainer.classList.remove('d-none');
      
      if (data.queries && data.queries.length > 0) {
        const tableHtml = `
          <div class="table-responsive">
            <table class="table table-sm table-hover mb-0">
              <thead>
                <tr>
                  <th>Query</th>
                  <th class="text-end" style="width: 120px">Duration</th>
                  <th class="text-end" style="width: 180px">Time</th>
                </tr>
              </thead>
              <tbody>
                ${data.queries.map(query => {
                  const duration = query.duration_ms;
                  const durationClass = duration > 100 ? 'query-duration-slow' : 'query-duration';
                  const timestamp = new Date(query.timestamp);
                  const timeString = timestamp.toLocaleTimeString();
                  
                  return `
                    <tr>
                      <td class="text-truncate" style="max-width: 500px;">
                        <code class="sql-query-code">${query.sql}</code>
                      </td>
                      <td class="text-end">
                        <span class="${durationClass}">
                          ${duration} ms
                        </span>
                      </td>
                      <td class="text-end query-timestamp">
                        <small>${timeString}</small>
                      </td>
                    </tr>
                  `;
                }).join('')}
              </tbody>
            </table>
          </div>
        `;
        container.innerHTML = tableHtml;
      } else {
        container.innerHTML = `
          <div class="text-center my-4 empty-data-message">
            <p>No queries recorded yet</p>
          </div>
        `;
      }
    } else {
      container.innerHTML = `
        <div class="text-center my-4 empty-data-message">
          <p>Query logging is disabled</p>
          <small class="text-muted">Enable it in the configuration to see SQL queries here</small>
        </div>
      `;
    }
  }

  // Function to show error state
  function showError(containerId, message) {
    const container = document.getElementById(containerId);
    container.innerHTML = `
      <div class="text-center my-4 text-danger">
        <i class="bi bi-exclamation-triangle fs-2 d-block mb-2"></i>
        <p>Error loading data</p>
        <small>${message}</small>
      </div>
    `;
  }

  // Load tables count data
  fetch('<%= api_tables_path %>', {
    headers: {
      'Accept': 'application/json',
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
  .then(response => {
    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }
    return response.json();
  })
  .then(data => {
    updateTablesCount(data);
  })
  .catch(error => {
    console.error('Error loading tables count:', error);
    const loading = document.getElementById('tables-loading');
    const count = document.getElementById('tables-count');
    loading.classList.add('d-none');
    count.classList.remove('d-none');
    count.innerHTML = '<span class="text-danger">Error</span>';
  });

  // Load database size data
  fetch('<%= api_database_size_path %>', {
    headers: {
      'Accept': 'application/json',
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
  .then(response => {
    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }
    return response.json();
  })
  .then(data => {
    updateDatabaseSize(data);
  })
  .catch(error => {
    console.error('Error loading database size:', error);
    const loading = document.getElementById('size-loading');
    const count = document.getElementById('size-count');
    loading.classList.add('d-none');
    count.classList.remove('d-none');
    count.innerHTML = '<span class="text-danger">Error</span>';
  });
  
  // Load records data separately
  fetch('<%= api_records_path %>', {
    headers: {
      'Accept': 'application/json',
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
  .then(response => {
    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }
    return response.json();
  })
  .then(recordsData => {
    updateRecordsData(recordsData);
  })
  .catch(error => {
    console.error('Error loading records data:', error);
    // Update records-related UI with error state
    const recordsLoading = document.getElementById('records-loading');
    const recordsCount = document.getElementById('records-count');
    recordsLoading.classList.add('d-none');
    recordsCount.classList.remove('d-none');
    recordsCount.innerHTML = '<span class="text-danger">Error</span>';
    
    showError('largest-tables-container', error.message);
  });

  // Load recent queries data
  fetch('<%= api_recent_queries_path %>', {
    headers: {
      'Accept': 'application/json',
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
  .then(response => {
    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }
    return response.json();
  })
  .then(data => {
    updateRecentQueries(data);
  })
  .catch(error => {
    console.error('Error loading recent queries:', error);
    showError('recent-queries-container', error.message);
  });
});
</script>

<style>
  .sql-query-code {
    font-family: 'Courier New', Courier, monospace;
    font-size: 0.85rem;
    background-color: rgba(0, 0, 0, 0.05);
    padding: 2px 4px;
    border-radius: 3px;
  }
  
  .query-duration {
    color: #28a745;
    font-weight: 500;
  }
  
  .query-duration-slow {
    color: #dc3545;
    font-weight: 600;
  }
  
  .query-timestamp {
    color: #6c757d;
  }
  
  .empty-data-message {
    color: #6c757d;
  }
  
  /* Loading animations */
  .spinner-border-sm {
    width: 1rem;
    height: 1rem;
  }
  
  /* Skeleton loader styles */
  .skeleton-loader {
    display: inline-block;
    height: 1.2em;
    width: 100%;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 37%, #f0f0f0 63%);
    background-size: 400% 100%;
    animation: skeleton-loading 1.2s ease-in-out infinite;
    border-radius: 4px;
  }
  .number-loader {
    width: 2.5em;
    height: 1.5em;
    margin-bottom: 0.2em;
  }
  .table-cell-loader {
    width: 6em;
    height: 1.2em;
  }
  .records-loader {
    width: 3em;
    height: 1.2em;
  }
  .query-cell-loader {
    width: 12em;
    height: 1.2em;
  }
  .duration-cell-loader {
    width: 4em;
    height: 1.2em;
  }
  .time-cell-loader {
    width: 7em;
    height: 1.2em;
  }
  @keyframes skeleton-loading {
    0% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0 50%;
    }
  }
</style>
